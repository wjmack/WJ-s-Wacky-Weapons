package wjmack.wjs.weapons.mixin;

import net.fabricmc.fabric.api.object.builder.v1.entity.FabricEntityTypeBuilder.Living;
import net.fabricmc.fabric.mixin.tool.attribute.LivingEntityMixin;
import net.minecraft.entity.EntityType;
import net.minecraft.entity.EquipmentSlot;
import net.minecraft.entity.LivingEntity;
import net.minecraft.entity.effect.StatusEffectInstance;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.particle.ParticleTypes;
import net.minecraft.server.MinecraftServer;
import net.minecraft.server.network.ServerPlayNetworkHandler;
import net.minecraft.server.network.ServerPlayerEntity;
import net.minecraft.server.world.ServerWorld;
import net.minecraft.sound.SoundCategory;
import net.minecraft.sound.SoundEvents;
import net.minecraft.text.LiteralText;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;
import wjmack.wjs.weapons.items.WhirlWindKnife;
import wjmack.wjs.weapons.WJsWackyWeapons;
import wjmack.wjs.weapons.access.PlayerEntityMixinAccessor;

import java.util.UUID;

import com.mojang.authlib.GameProfile;

import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;

@Mixin(ServerPlayerEntity.class)
public abstract class ServerPlayerEntityMixin extends LivingEntity implements PlayerEntityMixinAccessor {

    protected ServerPlayerEntityMixin(EntityType<? extends LivingEntity> entityType, World world) {
        super(entityType, world);
    }

    @Shadow
    public ServerPlayNetworkHandler networkHandler;
    float defaultAirSpeed = this.networkHandler.player.airStrafingSpeed;
    float dashTime = 0;
    int particleTime = 0;

    @Inject(method = "tick()V", at = @At("TAIL"))
    public void tick(CallbackInfo info) {

        ServerPlayerEntity player = this.networkHandler.player;
        ItemStack equippedStack = player.getEquippedStack(EquipmentSlot.MAINHAND);

        ItemStack mainStack = player.getEquippedStack(EquipmentSlot.MAINHAND);
        ItemStack offStack = player.getEquippedStack(EquipmentSlot.OFFHAND);
        ItemStack helmetStack = player.getEquippedStack(EquipmentSlot.HEAD);
        ItemStack chestplateStack = player.getEquippedStack(EquipmentSlot.CHEST);
        ItemStack leggingsStack = player.getEquippedStack(EquipmentSlot.LEGS);
        ItemStack bootsStack = player.getEquippedStack(EquipmentSlot.FEET);

        player.setNoGravity(
                helmetStack.getItem() == WJsWackyWeapons.SPACE_HELMET && !player.isFallFlying());

        if (player.hasNoGravity()) {
            player.addVelocity(0, (player.isSneaking() ? -0.03 : -0.012), 0);
            player.handleFall(0, true);
        }

        if (mainStack.getItem() == WJsWackyWeapons.WHIRLWIND_KNIFE) {
            player.handleFall(0, true);
        }
        if (((PlayerEntity) player).jumping && bootsStack.getItem() == WJsWackyWeapons.ROCKET_BOOTS && !player.isFallFlying()) {
            player.setNoGravity(true);
            world.addParticle(ParticleTypes.FLAME, (double) player.getX(),
                    (double) player.getY(), (double) player.getZ(), 0.0, -0.5, 0.0);
            player.playSound(WJsWackyWeapons.ROCKET, 0.2F,
                    1.0F);
            player.addVelocity(0, 0.045, 0);
            if (player.getVelocity().y > 0.45)
                player.setVelocity(player.getVelocity().x, 0.45, player.getVelocity().z);
        }
        player.airStrafingSpeed = bootsStack.getItem() == WJsWackyWeapons.ROCKET_BOOTS ? 2 * defaultAirSpeed
                : defaultAirSpeed;

    }

    public void dash(float time) {
        dashTime = time;
    }

    public void makeParticles(int amount, int ticks, World world) {
        ;
    }
}